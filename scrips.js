function fetchAndReportData() { 
    const url = "https://check.pa63.thistine.com/data.json"; // URL ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• JSON
    const lineToken = "LTFPuCdBsMMqsaSoP7rsIVDsNZGHJbWsxexJ7twEpuGe6n08LAIkAhYSTi6hVv6JQ7dW1KFK+hS4gJC7zeOPsdjUwfuE9g2ISqG50yTYJZd9+clGqxt1jyelDPVJJ1adaxJvGB/IcxkOps3aNxruTwdB04t89/1O/w1cDnyilFU="; // ‡πÉ‡∏™‡πà Token ‡∏Ç‡∏≠‡∏á LINE Bot
    
    try {
      // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• JSON
      const response = UrlFetchApp.fetch(url);
      const data = JSON.parse(response.getContentText());
  
      // ‡∏´‡∏≤‡∏Ñ‡πà‡∏≤‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
      const dates = data.map(entry => entry.dutyDate);
      const latestDate = new Date(Math.max(...dates.map(date => new Date(date)))); // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
      const targetDate = latestDate.toISOString().split('T')[0]; // ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö "yyyy-mm-dd"
      
      // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏ú‡∏±‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏ß‡∏£‡∏ï‡∏≤‡∏°‡∏ß‡∏±‡∏ô
      const duties = {
        "Monday": ["‡∏ä‡∏±‡∏¢", "‡∏Å‡πâ‡∏≠‡∏á", "‡∏ü‡∏≤‡∏á", "‡∏´‡∏°‡∏¥‡∏ß"],
        "Tuesday": ["‡∏ï‡∏±‡πâ‡∏°", "‡πÅ‡∏Å‡πâ‡∏°", "‡πÑ‡∏ó‡∏î‡πå", "‡∏ö‡∏≠‡∏™"],
        "Wednesday": ["‡∏ö‡∏∏‡πã‡∏°", "‡∏ô‡∏≤‡∏¢", "‡∏ì‡∏±‡∏ê", "‡πÄ‡∏à‡πâ‡∏≤"],
        "Thursday": ["‡∏ô‡πâ‡∏≥‡∏≠‡∏¥‡∏á", "‡πÅ‡∏ô‡∏ô", "‡∏ü‡∏µ‡∏ü‡πà‡∏≤", "‡πÑ‡∏õ‡∏£‡πå‡∏ó"],
        "Friday": ["‡∏Ç‡πâ‡∏≤‡∏ß", "‡∏ï‡∏µ‡πã", "‡∏ï‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå", "‡∏°‡∏¥‡∏Å"]
      };
      
      // ‡∏Å‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
      const filteredData = data.filter(entry => entry.dutyDate === targetDate);
      
      if (filteredData.length > 0) {
        // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô
        let message = `‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ${targetDate}:\n`;
        const presentNames = filteredData.map(entry => entry.studentName); // ‡πÄ‡∏Å‡πá‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏ó‡∏µ‡πà‡∏°‡∏≤‡∏ó‡∏≥‡πÄ‡∏ß‡∏£
  
        filteredData.forEach(entry => {
          message += `üë§ ‡∏ä‡∏∑‡πà‡∏≠‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô: ${entry.studentName}\nüìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥: ${entry.dutyDate}\nüì∏ ‡∏†‡∏≤‡∏û: ${entry.dutyPhoto}\n\n`;
        });
  
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏î
        const currentDay = new Date(targetDate).getDay(); // ‡∏´‡∏≤‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏≠‡∏á targetDate
        const dayNames = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];
        const missingNames = duties[dayNames[currentDay]].filter(name => !presentNames.includes(name));
  
        if (missingNames.length > 0) {
          message += `\n‚ö†Ô∏è ‡∏Ç‡∏≤‡∏î‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡πÄ‡∏ß‡∏£: ${missingNames.join(", ")}`;
        } else {
          message += `\n‚úÖ ‡∏ó‡∏≥‡πÄ‡∏ß‡∏£‡∏Ñ‡∏£‡∏ö‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô`;
        }
  
        // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ‡∏¢‡∏±‡∏á LINE
        const options = {
          method: 'post',
          headers: {
            'Authorization': `Bearer ${lineToken}`
          },
          contentType: 'application/json',
          payload: JSON.stringify({
            to: "U2378daf9502c6077d6b6a3ad0cb4cfac", // User ID ‡∏Ç‡∏≠‡∏á‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô
            messages: [{
              type: "text",
              text: message
            }]
          })
        };
  
        const lineResponse = UrlFetchApp.fetch("https://api.line.me/v2/bot/message/push", options);
  
        // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏î‡∏µ‡∏ö‡∏±‡∏Å
        Logger.log(`Response Code: ${lineResponse.getResponseCode()}`);
        Logger.log(`Response Body: ${lineResponse.getContentText()}`);
      } else {
        Logger.log(`‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ${targetDate}`);
      }
  
    } catch (e) {
      Logger.log(`Error: ${e.message}`);
    }
  }
  